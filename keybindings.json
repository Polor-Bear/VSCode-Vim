// 将键绑定放在此文件中以覆盖默认值auto[]
[
    {
        "key": "alt+h",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+p",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "alt+o",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+o",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+alt+j",
        "command": "extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+alt+k",
        "command": "extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+]",
        "command": "-extension.vim_ctrl+]",
        "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-markdown.extension.onIndentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "enter",
        "command": "wiki.goToWiki",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+]",
        "command": "-wiki.goToWiki"
    },
    {
        "key": "alt+w alt+k",
        "command": "wiki.openWiki"
    },
    {
        "key": "alt+w alt+d",
        "command": "wiki.deleteWiki"
    },
    {
        "key": "alt+w alt+e",
        "command": "wiki.exportWiki"
    },
    {
        "key": "alt+w alt+s",
        "command": "wiki.searchWiki"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "shift+alt+r",
        "command": "html.showPreviewToSide",
        "when": "editorLangId == 'html'"
    },
    {
        "key": "ctrl+k v",
        "command": "-html.showPreviewToSide",
        "when": "editorLangId == 'html'"
    },
    {
        "key": "shift+alt+r",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "shift+alt+r",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "shift+alt+r",
        "command": "pythonPreview.showPreviewToSide",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "ctrl+k v",
        "command": "-pythonPreview.showPreviewToSide",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+9",
        "command": "workbench.view.testing.focus"
    },
    {
        "key": "shift+;",
        "command": "vim.showQuickpickCmdLine",
        "when": "inZenMode && vim.mode != 'Insert'" 
    }
]