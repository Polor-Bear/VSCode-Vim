{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"template": {
		"prefix": "Vue",
		"body":[
			"# @Author:\t\t\tPolar_Bear",
			"# @Date:\t\t\t${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
			"# @Description:\t\t${1:description}",
			"\n\n${0}\n"
		],
		"description": "Log output to console"
	},
	"\"": {
		"prefix": "\"",
		"body":[
			"\"\"\"",
			"\t${0:doc}",
			"\"\""
		],
		"description": "Log output to console"
	},
	"if": {
		"prefix": "if",
		"body":[
			"if ${1:True}:",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"ife": {
		"prefix": "ife",
		"body":[
			"if ${1:True}:",
			"\t${2:pass}",
			"else:",
			"\t${3:pass}"
		],
		"description": "Log output to console"
	},
	"ifee": {
		"prefix": "ifee",
		"body":[
			"if ${1:True}:",
			"\t${2:pass}",
			"elif ${3:True}:",
			"\t${4:pass}",
			"else:",
			"\t${5:pass}"
		],
		"description": "Log output to console"
	},
	"ei": {
		"prefix": "ei",
		"body":[
			"elif ${1:True}:",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"el": {
		"prefix": "el",
		"body":[
			"else:",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"while": {
		"prefix": "while",
		"body":[
			"while ${1:True}:\n\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"for": {
		"prefix": "for",
		"body":[
			"for ${1:i} in ${2:expression_list}:",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"for in range": {
		"prefix": ["fr", "forr"],
		"body":[
			"for ${1:i} in range(${2:length}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"def": {
		"prefix": "def",
		"body":[
			"def ${1:funcname}(${2:argument}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"deff": {
		"prefix": "deff",
		"body":[
			"def ${1:funcname}(${2:argument}):",
			"\t\"\"\"${3:docstring for $1}\"\"\"",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"adef": {
		"prefix": "adef",
		"body":[
			"async def ${1:funcname}(${2:argument}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"adeff": {
		"prefix": "adeff",
		"body":[
			"async def ${1:funcname}(${2:argument}):",
			"\t\"\"\"${3:docstring for $1}\"\"\"",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"defi": {
		"prefix": "defi",
		"body":[
			"def __init__(self, ${1:args}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"defm": {
		"prefix": "defm",
		"body":[
			"def ${1:mname}(self, ${2:arg}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"adefm": {
		"prefix": "adefm",
		"body":[
			"async def ${1:mname}(self, ${2:arg}):",
			"\t${0:pass}"
		],
		"description": "Log output to console"
	},
	"test": {
		"prefix": "test",
		"body":[
			"def test_${1:description}(${2|indent(),self,''|}):",
			"\t${0}"
		],
		"description": "Log output to console"
	}
}